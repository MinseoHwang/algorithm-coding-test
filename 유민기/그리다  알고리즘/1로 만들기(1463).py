import sys
input = sys.stdin.readline

n = int(input())  # 정수를 입력받아서 n에 저장
result = [0] * (n + 1)  # 입력받은 결과 값 n에+1

for i in range(2, n + 1): # 2 ~ n+1 반복
    result[i] = result[i - 1] + 1  # 1을 만드는데 사용한 숫자 i-1을 다시 되돌리기 위해 +1을 한거임
    if i % 2 == 0:  #2로 나눴을 때 0이 되는가?
        result[i] = min(result[i], result[i // 2 ] + 1) #현재 숫자 i를 1로 만드는데 필요한 최소 연산 횟수를, 이전에 계산한 결과(result[i])와 현재 숫자를 2로 나눈 숫자를 1로 만드는데 필요한 최소 연산 횟수(result[i // 2] + 1) 중 작은 값으로 업데이트합니다.
    if i % 3 == 0:  #3으로 나눴을 때 0이 되는가?
        result[i] = min(result[i], result[i // 3 ] + 1) #현재 숫자 i를 1로 만드는데 필요한 최소 연산 횟수를, 이전에 계산한 결과(result[i])와 현재 숫자를 3으로 나눈 숫자를 1로 만드는데 필요한 최소 연산 횟수(result[i // 3] + 1) 중 작은 값으로 업데이트합니다.

print(result[n]) #n을 1로 만드는 최솟값 result[n]를 출력





"""
풀이 : 
1.정수를 입력받아 n에 저장한다.
2. 입력받은 정수 n의 최소 연산 횟수를 구하기 위해서 n+1 * [0]을 result에 저장한다.
3. 2 ~ n+1 구간을 반복해서 최소 연산 횟수를 찾는다.
4. 최소 연산 횟수를 찾았다면 더해줬던 1을 다시 빼준다.
5. 2로 나누었을 때, 3으로 나누었을 때 0이 되는지를 확인하고 나눈 숫자의 작은 값으로 수를 업데이트 해준다.
6. n을 1로 만들어주는 최솟값 result[n]을 출력해준다.
"""
