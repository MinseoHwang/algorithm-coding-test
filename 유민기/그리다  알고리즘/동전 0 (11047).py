#동전0 11047
"""https://www.acmicpc.net/problem/11047"""
# 동전0 문제는 입력받은 K원에 해당하는 값에대해 N개의 동전 갯수를 조합하여 필요한 동전의 최솟값을 구하는 문제이다.
# 그렇다면 이 문제를 풀기 위해서 단계를 세워 풀어보자.
# 1. 먼저 동전의 종류 n, 가치의 합 k를 입력받아야 한다.
# 2. 그런다음 입력받은 동전의 종류를 저장할 빈 배열을 생성하고, 최솟값을 구해야할 변수 count를 선언하여 초기화해줘야 한다.
# 3. 동전의 값을 입력받으면 coin배열에 추가해준다.
# 4. 이 문제의 요구사항이 동전의 최솟값을 찾는 것이기 때문에 Python에서 제공하는 reverse()함수를 활용해 줄것이다.
# -> reverse 함수를 사용하는 이유는 그리디 알고리즘을 이용하는 과정에서 정렬되어 있는 큰 값을 집어넣었/elibrary-front/search/searchList.ink을 때  최솟값을 찾는 루트가 가장 빠르기 때문이다.
# 5. k(동전의 값) / i(임시변수) 한 값을 count(최솟값을 저장하는 변수)에 저장을 할 것이다.  사용한 나머지 금액은 k에 저장한다.
# 6. 이렇게 위 과정을 거치면 count에 동전의 최솟값이 저장되었으므로 출력을 해주면 답이 나올 것이다.

import sys

n,k = map(int, sys.stdin.readline().split())  # 동전의 개수 n과 동전의 합 k를 입력받습니다.
coin = []
count = 0

# 여기서는 굳이 임시변수 i가 필요하지 않기때문에 반복문에 blank 처리를 한 것이다.
for _ in range(n):  
  coin.append(int(sys.stdin.readline()))  # 동전의 값을 입력받아 리스트에 추가합니다.

coin.reverse()  # 동전의 값을 역순으로 정렬합니다.
for i in coin:  
    count += k // i  # 동전의 가치로 나눈 몫을 count에 더합니다. (해당 가치의 동전 개수를 더합니다)
    k %= i  # 나머지를 k에 저장합니다. (해당 가치의 동전을 사용한 후 남은 금액입니다)
print(count)   # 최종적으로 동전의 개수를 출력합니다.
